select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
  .rounded(5px);
  padding: 10px;
  margin-bottom: 25px;
  font-size: 16px;

  &:focus {
    border-color: #999;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 10px rgba(0,0,0,.2)");
  }
}

select {
  height: 33px;
  padding: 4px;
  font-size: 16px;
}

form {
  .error,
  err {
    color: #DC4D38;
    font-size: 13px;
    margin-top: -23px;
    height: 23px;
  }

  .success {
    color: green;
    font-size: 13px;
    margin-top: -23px;
    height: 23px;
  }

  .amount input, .amount select {
    vertical-align: bottom;
  }

  .amount .value {
    margin-right: 10px;
  }

  .amount .currency {
    width: auto;
  }
}

// Undo default Bootstrap invalid style for Angular-managed forms
input.ng-invalid:focus:required:invalid,
textarea.ng-invalid:focus:required:invalid,
select.ng-invalid:focus:required:invalid {
  border-color: #999;
  .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 10px rgba(0,0,0,.2)");
}

// Only mark field invalid that have been edited
input.ng-invalid.ng-dirty {
  border-color: darken(#ee5f5b, 10%);

  &:focus {
    @shadow: 0 0 6px lighten(#ee5f5b, 20%);
    .box-shadow(@shadow);
  }
}

// De-emphasize submit button if form invalid
//
// This is better than just disabling the button because this way we can handle
// a click on the button. If the user tries to submit, we can detect this and
// then show them *why* the form is not yet valid.
form.ng-invalid .btn-success {
  background: #ccc;
  border-color: #ccc;
}